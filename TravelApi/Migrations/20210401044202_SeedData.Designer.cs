// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelApi.Models;

namespace TravelApi.Migrations
{
    [DbContext(typeof(TravelApiContext))]
    [Migration("20210401044202_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TravelApi.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            City = "Bulawayo",
                            Country = "Zimbabwe"
                        },
                        new
                        {
                            LocationId = 2,
                            City = "Rosario",
                            Country = "Argentina"
                        },
                        new
                        {
                            LocationId = 3,
                            City = "Luxembourg",
                            Country = "Luxembourg"
                        },
                        new
                        {
                            LocationId = 4,
                            City = "Bharatpur",
                            Country = "Nepal"
                        },
                        new
                        {
                            LocationId = 5,
                            City = "Almaty",
                            Country = "Kazakhstan"
                        });
                });

            modelBuilder.Entity("TravelApi.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ReviewId");

                    b.HasIndex("LocationId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            LocationId = 1,
                            Rating = 3,
                            Text = "Every day is comfortable and beautiful outside. But water supply is a big problem.",
                            Title = "Perfect Weather!"
                        },
                        new
                        {
                            ReviewId = 2,
                            LocationId = 2,
                            Rating = 3,
                            Text = "Every day is comfortable and beautiful outside. But there is crime and violence.",
                            Title = "Gorgeous Weather!"
                        },
                        new
                        {
                            ReviewId = 3,
                            LocationId = 3,
                            Rating = 2,
                            Text = "The rent is too damned high!",
                            Title = "Gloomy & Expensive!"
                        },
                        new
                        {
                            ReviewId = 4,
                            LocationId = 4,
                            Rating = 5,
                            Text = "There are wonderful flavors and spices here, and it's not too intense!",
                            Title = "Love the food!"
                        },
                        new
                        {
                            ReviewId = 5,
                            LocationId = 5,
                            Rating = 1,
                            Text = "The men here sure are not respectful to women!",
                            Title = "Ladies, don't go!"
                        });
                });

            modelBuilder.Entity("TravelApi.Models.Review", b =>
                {
                    b.HasOne("TravelApi.Models.Location", null)
                        .WithMany("Reviews")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TravelApi.Models.Location", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
